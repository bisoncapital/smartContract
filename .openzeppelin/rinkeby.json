{
  "manifestVersion": "3.1",
  "impls": {
    "c852cbe4dea09139c172e28bee1f61d420c7c22296b72da9a54d51dcb50118b8": {
      "address": "0x204cDB055A97d08c5C898572aa52DF264d8fEB67",
      "txHash": "0xfa9bff31363edfe6ea200eb0205bac86fefdec85bd1128535798354905b967d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1193_storage)",
            "src": "openzeppelin/access/AccessControl.sol:59"
          },
          {
            "contract": "AccessControlUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/AccessControl.sol:211"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "openzeppelin/token/ERC20/ERC20.sol:38"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "openzeppelin/token/ERC20/ERC20.sol:40"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "openzeppelin/token/ERC20/ERC20.sol:42"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_name",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:44"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:45"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "openzeppelin/token/ERC20/ERC20.sol:46"
          },
          {
            "contract": "ERC20UpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "openzeppelin/token/ERC20/ERC20.sol:318"
          },
          {
            "contract": "ERC20BurnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Burnable.sol:54"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "_paused",
            "type": "t_bool",
            "src": "openzeppelin/utils/Pausable.sol:27"
          },
          {
            "contract": "PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/utils/Pausable.sol:85"
          },
          {
            "contract": "ERC20PausableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/token/ERC20/ERC20Pausable.sol:40"
          },
          {
            "contract": "ERC20PresetMinterPauserUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/presets/ERC20PresetMinterPauser.sol:102"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1193_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeSafe.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)1193_storage": {
            "label": "struct AccessControlUpgradeSafe.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3270_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3270_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3090_storage"
              }
            ]
          },
          "t_struct(Set)3090_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          }
        }
      }
    },
    "6211e6ebeeafc3fc36385f3ef59907a359e89fe10502c2b9074531c3560d68e8": {
      "address": "0x1539DA430fC98255797684F1aca31EcD1c285aD3",
      "txHash": "0xffcfa2c03aa1c83ad2a31ab63a667f7273fb83f85de94b9c54e27e1a4685397d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "openzeppelin/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/Initializable.sol:61"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "openzeppelin/GSN/Context.sol:39"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "openzeppelin/access/Ownable.sol:19"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "openzeppelin/access/Ownable.sol:79"
          },
          {
            "contract": "LockUpPool",
            "label": "bisonToken",
            "type": "t_contract(ERC20PresetMinterPauserUpgradeSafe)2025",
            "src": "LockUpPool.sol:18"
          },
          {
            "contract": "LockUpPool",
            "label": "PENALTY_RATE",
            "type": "t_uint256",
            "src": "LockUpPool.sol:21"
          },
          {
            "contract": "LockUpPool",
            "label": "SECONDS_IN_MONTH",
            "type": "t_uint256",
            "src": "LockUpPool.sol:22"
          },
          {
            "contract": "LockUpPool",
            "label": "DURATION_BOOST",
            "type": "t_uint256",
            "src": "LockUpPool.sol:23"
          },
          {
            "contract": "LockUpPool",
            "label": "emergencyMode",
            "type": "t_bool",
            "src": "LockUpPool.sol:25"
          },
          {
            "contract": "LockUpPool",
            "label": "tokenStats",
            "type": "t_mapping(t_address,t_struct(TokenStats)148_storage)",
            "src": "LockUpPool.sol:60"
          },
          {
            "contract": "LockUpPool",
            "label": "pools",
            "type": "t_array(t_address)dyn_storage",
            "src": "LockUpPool.sol:63"
          },
          {
            "contract": "LockUpPool",
            "label": "userLockUps",
            "type": "t_mapping(t_address,t_struct(UserLockUp)129_storage)",
            "src": "LockUpPool.sol:66"
          },
          {
            "contract": "LockUpPool",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "LockUpPool.sol:263"
          }
        ],
        "types": {
          "t_contract(ERC20PresetMinterPauserUpgradeSafe)2025": {
            "label": "contract ERC20PresetMinterPauserUpgradeSafe"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(TokenStats)148_storage)": {
            "label": "mapping(address => struct LockUpPool.TokenStats)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(TokenStats)148_storage": {
            "label": "struct LockUpPool.TokenStats",
            "members": [
              {
                "label": "interestRate",
                "type": "t_uint256"
              },
              {
                "label": "totalLockUp",
                "type": "t_uint256"
              },
              {
                "label": "effectiveTotalLockUp",
                "type": "t_uint256"
              },
              {
                "label": "totalPenalty",
                "type": "t_uint256"
              },
              {
                "label": "accTotalLockUp",
                "type": "t_uint256"
              },
              {
                "label": "accLockUpCount",
                "type": "t_uint40"
              },
              {
                "label": "activeLockUpCount",
                "type": "t_uint40"
              },
              {
                "label": "unlockedCount",
                "type": "t_uint40"
              },
              {
                "label": "brokenCount",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_struct(UserLockUp)129_storage)": {
            "label": "mapping(address => struct LockUpPool.UserLockUp)"
          },
          "t_struct(UserLockUp)129_storage": {
            "label": "struct LockUpPool.UserLockUp",
            "members": [
              {
                "label": "total",
                "type": "t_uint256"
              },
              {
                "label": "effectiveTotal",
                "type": "t_uint256"
              },
              {
                "label": "accTotal",
                "type": "t_uint256"
              },
              {
                "label": "bonusClaimed",
                "type": "t_uint256"
              },
              {
                "label": "bonusDebt",
                "type": "t_uint256"
              },
              {
                "label": "lockedUpCount",
                "type": "t_uint40"
              },
              {
                "label": "lockUps",
                "type": "t_array(t_struct(LockUp)113_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(LockUp)113_storage)dyn_storage": {
            "label": "struct LockUpPool.LockUp[]"
          },
          "t_struct(LockUp)113_storage": {
            "label": "struct LockUpPool.LockUp",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "durationInMonths",
                "type": "t_uint256"
              },
              {
                "label": "unlockedAt",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "effectiveAmount",
                "type": "t_uint256"
              },
              {
                "label": "exitedAt",
                "type": "t_uint256"
              },
              {
                "label": "interestRate",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xB1763B7835d5Ff08055f58069B44c1FB3b161CC3",
    "txHash": "0x42070309a3ad0a0deef8ad2c3533a214b289bd972a5773a414b18211fc00454d"
  }
}
